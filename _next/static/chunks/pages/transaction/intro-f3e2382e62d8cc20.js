(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[578],{5286:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/transaction/intro",function(){return e(4435)}])},4435:function(n,t,e){"use strict";e.r(t),e.d(t,{__toc:function(){return c}});var a=e(5893),i=e(2673),o=e(373),r=e(8426);e(9128);var s=e(2643);let c=[{depth:2,value:"소개",id:"소개"}];function _createMdxContent(n){let t=Object.assign({h2:"h2",p:"p",code:"code"},(0,s.a)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"소개",children:"소개"}),"\n",(0,a.jsxs)(t.p,{children:["보통 IoT나 지표데이터 수집, 블로그 같은 경우 격리수준이 높을필요가 없을 수도 있습니다. ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(t.p,{children:["하지만 결제,송금,뱅킹,포인트 같은 영역에서는 트랜잭션이 중요합니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(t.p,{children:["데이터베이스는 데이터를 처리하고 커밋하기 까지의 단위를 트랜잭션 단위로 처리할 수 있도록 합니다. 그리고 이 트랜잭션이라는 기준을 갖추기 위해서는 ",(0,a.jsx)(t.code,{children:"원자성"}),", ",(0,a.jsx)(t.code,{children:"일관성"}),", ",(0,a.jsx)(t.code,{children:"격리성"}),", ",(0,a.jsx)(t.code,{children:"지속성"})," 이라는 요소를 갖춰야 합니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(t.p,{children:["쉽게 설명하면 트랜잭션 하나는 하나의 원자적인 단위로 취급되어 트랜잭션 내에서 하나가 실패할 경우 트랜잭션 내부의 모든 연산이 롤백되어야 하는 원자성, 트랜잭션에서 수행하는 연산은 데이터베이스의 무결성 제약 조건이 지켜져야 한다는 일관성, 수행중인 트랜잭션은 다른 트랜잭션에 의해 변경되거나 수정되지 않아야 한다는 격리성, 완료된 트랜잭션은 기록되어야 한다는 지속성 이라는 원칙이 있습니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(t.p,{children:["이번 카테고리에서는 이런 내용들을 다루며, SQL로는 이렇게 트랜잭션을 열고 닫고, Spring 에서는 어떻게 선언적인 트랜잭션을 사용하는지, 트랜잭션 전파 옵션은 무엇이 있는지를 정리합니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(t.p,{children:"개인적으로 시간이 부족하기도 하지만, 가급적이면 빠른 시일 내에 정리하도록 하겠습니다."})]})}let d={MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.a)(),n.components);return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(_createMdxContent,{...n})}):_createMdxContent(n)},pageOpts:{filePath:"pages/transaction/intro.mdx",route:"/transaction/intro",timestamp:1708858989e3,pageMap:[{kind:"MdxPage",name:"about",route:"/about"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"memory-disk-wal",route:"/memory-disk-wal"},{kind:"MdxPage",name:"mysql-index",route:"/mysql-index"},{kind:"MdxPage",name:"normalization-denormalization",route:"/normalization-denormalization"},{kind:"Folder",name:"transaction",route:"/transaction",children:[{kind:"MdxPage",name:"intro",route:"/transaction/intro"},{kind:"MdxPage",name:"transaction-isolation-level",route:"/transaction/transaction-isolation-level"},{kind:"MdxPage",name:"what-is-acid",route:"/transaction/what-is-acid"},{kind:"MdxPage",name:"what-is-mvcc",route:"/transaction/what-is-mvcc"},{kind:"Meta",data:{intro:"소개","what-is-mvcc":"MVCC","what-is-acid":"트랜잭션의 기본 4원칙","transaction-isolation-level":"트랜잭션 격리수준"}}]},{kind:"Meta",data:{index:"Introduction","memory-disk-wal":"Memory vs Disk, WAL","mysql-index":"인덱스","normalization-denormalization":"정규화, 반정규화",transaction:"트랜잭션",about:{title:"About",type:"page"},contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Intro",headings:c},pageNextRoute:"/transaction/intro",nextraLayout:o.ZP,themeConfig:r.Z};t.default=(0,i.j)(d)},8426:function(n,t,e){"use strict";var a=e(5893);e(7294);let i={logo:(0,a.jsx)("span",{children:"My Project"}),project:{link:"https://github.com/chagchagchag/docs-mysql-essential"},docsRepositoryBase:"https://github.com/chagchagchag/docs-mysql-essential",footer:{text:"Nextra Docs Template"}};t.Z=i},5789:function(){}},function(n){n.O(0,[774,796,888,179],function(){return n(n.s=5286)}),_N_E=n.O()}]);